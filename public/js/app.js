angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,auth?auth:(e.go("login"),!1)):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return a=t.post("/api/authenticate",e),a}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth)?auth:(e.go("login"),!1)):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.post("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth)?auth:(e.go("login"),!1)):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),console.log(t.data.callback),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,$timeout(function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n})},500),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,$timeout(function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n})},500),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var a=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n})};return a}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){if(value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1)return e.go("login"),!1})};return n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;console.log("aa"),auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){if(value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1)return e.go("login"),!1})};return n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){if(value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1)return e.go("login"),!1})};return n.then(function(t){return t})}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t})};return n.then(function(t){return t})}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){
window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t})};return n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t})};return console.log(n),n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t.data.callback})};return console.log(n),n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t.data.callback})};return n.then(function(t){console.log(t)}),n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t.data.callback})};return console.log(n),n}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){if(!localStorage.getItem("token"))return e.go("login"),!1;auth=JSON.parse(localStorage.getItem("token")).token||!1;var n=function(){return t.authenticateToken(auth)};n.then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):t.data.callback})}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login");
}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]),angular.module("idea",["ideaController","ideaService","loginService"]);var app=angular.module("ideaController",["ui.router"]).controller("mainController",["$scope","$http","Ideas","$state","Authenticate","LoginService","$timeout",function(t,e,n,a,o,i,r){t.formData={},t.loading=!0,n.get().success(function(e){t.ideas=e,t.loading=!1}),t.createIdea=function(){void 0!=t.formData.text&&(t.loading=!0,n.create(t.formData).success(function(e){t.loading=!1,t.formData={},t.ideas=e}))},t.deleteIdea=function(e){t.loading=!0,n.delete(e).success(function(e){t.loading=!1,t.ideas=e})}}]).directive("ngConfirmClick",[function(){return{link:function(t,e,n){var a=n.ngConfirmClick||"Are you sure?",o=n.confirmedClick;e.bind("click",function(e){window.confirm(a)&&t.$eval(o)})}}}]).run(["$rootScope","$location","$state","LoginService",function(t,e,n,a){a.isAuthenticated()||n.transitionTo("login")}]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/login"),t.state("login",{url:"/login",templateUrl:"loginTemplate.html",controller:"LoginController"}).state("home",{url:"/",templateUrl:"domainList.html",controller:"mainController"})}]).controller("LoginController",["$scope","$rootScope","$stateParams","$state","LoginService","$timeout",function(t,e,n,a,o,i){t.formSubmit=function(){o.login(t),t.loading=!0,i(function(){t.loading=!1,o.isAuthenticated()?(t.error="",t.username="",t.password="",a.go("home")):t.error="Incorrect username/password!"},1e3)}}]).factory("LoginService",["Authenticate","$state",function(t,e){var n=!1;return{login:function(e){t.authenticate(e.loginData).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),n})},isAuthenticated:function(){return localStorage.getItem("token")?(auth=JSON.parse(localStorage.getItem("token")).token||!1,t.authenticateToken(auth).then(function(t){return value=t.data.callback===!1?t.data.callback:'"'+t.data.callback+'"',localStorage.setItem("token",'{"token":'+value+"}"),t.data.callback===!1?(e.go("login"),!1):n}),auth):(e.go("login"),!1)}}}]);angular.module("ideaService",[]).factory("Ideas",["$http","LoginService",function(t,e){return{get:function(){return e.isAuthenticated(),t.get("/api/ideas")},create:function(n){return e.isAuthenticated(),t.post("/api/ideas",n)},delete:function(n,a){return e.isAuthenticated(),t.delete("/api/ideas/"+n)}}}]),angular.module("loginService",[]).factory("Authenticate",["$http",function(t){return{authenticate:function(e){return t.post("/api/authenticate",e)},authenticateToken:function(e){return t.get("/api/authenticate/"+e)}}}]);